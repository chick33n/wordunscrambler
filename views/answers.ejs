<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Answers</title>

</head>
<style>
@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@300&display=swap');
body {
    margin: 0;
    overflow: hidden;
    background: #262626;
}

#floatingbubbles {
    display: block;
    width: 100%;
    height: 100%;
}

.container{
    position: relative;
    width: 100vw;
    height: 100vh;
}
.subcontainer{
    width: 300px;
    height: 40px;
    border-radius: 5px;
    font-family: 'Outfit', sans-serif;
    font-weight: 500;
    position: absolute;
    top: 35%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: aliceblue;
}
ul li
{
    list-style-type: none;
}

.signature{
    position: absolute;
    font-family: 'Outfit', sans-serif;
    font-weight: 500;
    top: 90%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: aliceblue;
}

#spotify{
    position: absolute;
    font-family: 'Outfit', sans-serif;
    top: 75%;
    left: 50%;
    transform: translate(-50%, -75%);
    color: aliceblue;
}


</style>
<body>
    
  <%  let number = Math.floor(Math.random() * 4 ) + 1%>
  <% if(number == 1){ console.log(1) %>
    <audio  autoplay loop>
      <source src="/music/music1.mp3" type="audio/mpeg" />
    </audio> <%} %>

  <%  if(number == 2){ console.log(2) %>
    <audio   autoplay loop>
      <source src="/music/music2.mp3" type="audio/mpeg" />
    </audio> <%} %>

  <%  if(number == 3){ console.log(3) %>
    <audio  autoplay loop>
      <source src="/music/music3.mp3" type="audio/mpeg" />
    </audio> <%} %>

  <%  if(number == 4){ console.log(4) %>
    <audio  autoplay loop>
      <source src="/music/music4.mp3" type="audio/mpeg" />
    </audio> <%} %>
    
    <div class="container">

        <canvas id="floatingbubbles"></canvas>

        <div class="subcontainer">
            <ul><% for(i = 0; i < goodWords.length; i+=5) { %> 
                <li> <%= goodWords[i] %>, <%= goodWords[i+1] %>, <%= goodWords[i+2] %>,<%= goodWords[i+3] %>, <%= goodWords[i+4] %> </li>
                <% } %>
            </ul>
        </div>
        <p id="signature" class="signature">Brought to you by Augustine :/ Music choice by Mimi ;)</p>
        
     
    </div>
    <script> 

        class bubble {
      constructor(canvasWidth, canvasHeight) {
        this.maxHeight = canvasHeight;
        this.maxWidth = canvasWidth;
        this.randomise();
      }
    
      generateDecimalBetween(min, max) {
        return (Math.random() * (min - max) + max).toFixed(2);
      }
    
      update() {
        this.posX = this.posX - this.movementX;
        this.posY = this.posY - this.movementY;
    
        if (this.posY < 0 || this.posX < 0 || this.posX > this.maxWidth) {
          this.randomise();
          this.posY = this.maxHeight;
        }
      }
    
      randomise() {
        this.colour = Math.random() * 255;
        this.size = this.generateDecimalBetween(2, 6);
        this.movementX = this.generateDecimalBetween(-0.4, 0.4);
        this.movementY = this.generateDecimalBetween(0.7, 2);
        this.posX = this.generateDecimalBetween(0, this.maxWidth);
        this.posY = this.generateDecimalBetween(0, this.maxHeight);
      }
    }
    
    class background {
      constructor() {
        this.canvas = document.getElementById("floatingbubbles");
        this.ctx = this.canvas.getContext("2d");
        this.canvas.height = window.innerHeight;
        this.canvas.width = window.innerWidth;
        this.bubblesList = [];
        this.generateBubbles();
        this.animate();
      }
    
      animate() {
        let self = this;
        self.ctx.clearRect(0, 0, self.canvas.width, self.canvas.height);
        self.bubblesList.forEach(function(bubble) {
          bubble.update();
          self.ctx.beginPath();
          self.ctx.arc(bubble.posX, bubble.posY, bubble.size, 0, 2 * Math.PI);
          self.ctx.fillStyle = "hsl(" + bubble.colour + ", 40%, 39%)";
          self.ctx.fill();
          self.ctx.strokeStyle = "hsl(" + bubble.colour + ", 40%, 39%)";
          self.ctx.stroke();
        });
    
        requestAnimationFrame(this.animate.bind(this));
      }
    
      addBubble(bubble) {
        return this.bubblesList.push(bubble);
      }
    
      generateBubbles() {
        let self = this;
        for (let i = 0; i < self.bubbleDensity(); i++) {
          self.addBubble(new bubble(self.canvas.width, self.canvas.height));
        }
      }
    
      bubbleDensity() {
        return Math.sqrt((this.canvas.height, this.canvas.width) * 5);
      }
    }
    
    window.onload = function() {
      new background();
    };
    
    window.requestAnimFrame = (function() {
      return (
        window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        function(callback) {
          window.setTimeout(callback, 1000 / 60);
        }
      );
    })();
    
        </script>
</body>
</html>